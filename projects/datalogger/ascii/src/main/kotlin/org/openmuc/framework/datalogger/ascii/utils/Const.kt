/*
 * Copyright 2011-2022 Fraunhofer ISE
 *
 * This file is part of OpenMUC.
 * For more information visit http://www.openmuc.org
 *
 * OpenMUC is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * OpenMUC is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with OpenMUC.  If not, see <http://www.gnu.org/licenses/>.
 *
 */
package org.openmuc.framework.datalogger.ascii.utils

import java.nio.charset.StandardCharsets

object Const {
    val CHAR_SET = StandardCharsets.US_ASCII
    val DEFAULT_DIRECTORY = System.getProperty("user.dir") + "/data/ascii/"
    const val FILEINFO = "generated by AsciiLoger of OpenMUC"
    const val ISEFORMATVERSION = 1.00
    const val EXTENSION = ".dat"
    const val EXTENSION_OLD = ".old"
    const val HEADER_SIGN = "##"
    const val COMMENT_SIGN = "#"
    const val COMMENT_NAME = "comment"
    const val TIMESTAMP_STRING = "unixtimestamp"
    const val INVALID_INDEX: Short = -1
    const val DATE_FORMAT = "%1\$tY%1\$tm%1\$td" // Date in YYYYMMDD
    const val TIME_FORMAT = "%1\$tH%1\$tM%1\$tS" // Time in HHMMSS
    const val SEPARATOR = ";\t"
    const val LINESEPARATOR = '\n'
    const val LINESEPARATOR_STRING = "\n"
    const val ERROR = "err"
    const val COL_NUM = "col_no"
    const val DATATYPE_NAME = "value_type"
    const val VALUETYPE_ENDSIGN = ". "
    const val VALUETYPE_SIZE_SEPARATOR = ","
    const val HEXADECIMAL = "0x"
    const val MINUS_SIGN = '-'
    const val PLUS_SIGN = '+'
    const val DECIMAL_SEPARATOR = '.'
    const val TIME_SEPERATOR = '_'
    const val TIME_SEPERATOR_STRING = "_"
    const val SIZE_LEADING_SIGN = 1
    const val VALUE_SIZE_DOUBLE = 8 + SIZE_LEADING_SIGN
    const val VALUE_SIZE_INTEGER = 11 + SIZE_LEADING_SIGN
    const val VALUE_SIZE_LONG = 20 + SIZE_LEADING_SIGN
    const val VALUE_SIZE_SHORT = 6 + SIZE_LEADING_SIGN
    const val VALUE_SIZE_MINIMAL = 5 + SIZE_LEADING_SIGN
    const val NUM_OF_TIME_TYPES_IN_HEADER = 3
}
